{"version":3,"sources":["Loading.js","Tour.js","Tours.js","App.js","index.js"],"names":["Loading","className","Tour","tour","removeTour","useState","readMore","setReadMore","id","image","info","name","price","src","slice","onClick","Tours","tours","map","App","setTours","title","setTitle","isLoading","setIsLoading","fetchTours","a","fetch","response","json","console","log","useEffect","length","newTour","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAUeA,EARC,WACd,OACE,qBAAKC,UAAU,UAAf,SACE,+CC6BSC,EAhCF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAAiB,EACLC,oBAAS,GADJ,mBAC9BC,EAD8B,KACpBC,EADoB,KAE7BC,EAAiCL,EAAjCK,GAAIC,EAA6BN,EAA7BM,MAAOC,EAAsBP,EAAtBO,KAAMC,EAAgBR,EAAhBQ,KAAMC,EAAUT,EAAVS,MAE/B,OACE,0BAASX,UAAU,UAAnB,UACE,qBAAKA,UAAU,MAAMY,IAAKJ,IAC1B,sBAAKR,UAAU,YAAf,UACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,OAAb,SAAqBU,IACrB,oBAAGV,UAAU,QAAb,cAAuBW,QAEzB,oBAAGX,UAAU,OAAb,UACGK,EAAWI,EAAKI,MAAM,EAAG,KAAOJ,EACjC,mBACET,UAAU,OACVc,QAAS,WACPR,GAAaD,IAHjB,SAMGA,EAAW,gBAAkB,qBAIlC,wBAAQL,UAAU,MAAMc,QAAS,kBAAMX,EAAWI,IAAlD,mCCZOQ,EAZD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOb,EAAiB,EAAjBA,WACtB,OACE,mCACE,qBAAKH,UAAU,cAAf,SACGgB,EAAMC,KAAI,SAACf,GACV,OAAO,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKK,YC0DlBW,MA3Df,WAAgB,IAAD,EACad,mBAAS,IADtB,mBACNY,EADM,KACCG,EADD,OAEaf,mBAAS,aAFtB,mBAENgB,EAFM,KAECC,EAFD,OAGqBjB,oBAAS,GAH9B,mBAGNkB,EAHM,KAGKC,EAHL,KAgBPC,EAAU,uCAAG,8BAAAC,EAAA,6DACjBF,GAAa,GADI,kBAGQG,MArBjB,8CAkBS,cAGTC,EAHS,gBAIKA,EAASC,OAJd,OAITZ,EAJS,OAKfO,GAAa,GACbJ,EAASH,GANM,kDAQfO,GAAa,GACbM,QAAQC,IAAR,MATe,0DAAH,qDAyBhB,OAZAC,qBAAU,WACRP,MACC,IAWD,+BACE,0BAASxB,UAAU,UAAnB,UACE,sBAAKA,UAAU,QAAf,UACE,6BAAKsB,EAAY,cAAC,EAAD,IAAcF,IACb,IAAjBJ,EAAMgB,SAA8B,IAAdV,GACrB,wBAAQtB,UAAU,MAAMc,QAAS,kBAAMU,KAAvC,wBAMJ,cAAC,EAAD,CAAOR,MAAOA,EAAOb,WApBR,SAACI,GAClB,IAAM0B,EAAUjB,EAAMkB,QAAO,SAAChC,GAAD,OAAUA,EAAKK,KAAOA,KACnDY,EAASc,GACc,IAAnBA,EAAQD,QACVX,EAAS,0BCtCfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f1f805b9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <h1>loading...</h1>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { useState } from \"react\";\n\nconst Tour = ({ tour, removeTour }) => {\n  const [readMore, setReadMore] = useState(true);\n  const { id, image, info, name, price } = tour;\n\n  return (\n    <article className=\"article\">\n      <img className=\"img\" src={image}></img>\n      <div className=\"footerDiv\">\n        <div className=\"articleDesc\">\n          <p className=\"name\">{name}</p>\n          <p className=\"price\">${price}</p>\n        </div>\n        <p className=\"info\">\n          {readMore ? info.slice(0, 200) : info}\n          <a\n            className=\"link\"\n            onClick={() => {\n              setReadMore(!readMore);\n            }}\n          >\n            {readMore ? \"... Read More\" : \"... Read Less\"}\n          </a>\n        </p>\n\n        <button className=\"btn\" onClick={() => removeTour(id)}>\n          Not interested\n        </button>\n      </div>\n    </article>\n  );\n};\n\nexport default Tour;\n","import React from \"react\";\nimport Tour from \"./Tour\";\nconst Tours = ({ tours, removeTour }) => {\n  return (\n    <>\n      <div className=\"allArticles\">\n        {tours.map((tour) => {\n          return <Tour key={tour.id} tour={tour} removeTour={removeTour} />;\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Tours;\n","import React, { useState, useEffect } from \"react\";\nimport Loading from \"./Loading\";\nimport Tours from \"./Tours\";\n\nconst url = \"https://course-api.com/react-tours-project\";\n\nfunction App() {\n  const [tours, setTours] = useState([]);\n  const [title, setTitle] = useState(\"Our Tours\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Alternate way of fetching data from the API:\n  // useEffect(() => {\n  //   fetch(url)\n  //     .then((resp) => resp.json())\n  //     .then((json) => {\n  //       setTours(json);\n  //       setIsLoading(false);\n  //     })\n  //     .catch((error) => console.log(`Error: ${error}`));\n  // }, []);\n\n  const fetchTours = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(url);\n      const tours = await response.json();\n      setIsLoading(false);\n      setTours(tours);\n    } catch (error) {\n      setIsLoading(false);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTours();\n  }, []);\n\n  const removeTour = (id) => {\n    const newTour = tours.filter((tour) => tour.id !== id);\n    setTours(newTour);\n    if (newTour.length === 0) {\n      setTitle(\"No Tours Left\");\n    }\n  };\n\n  return (\n    <main>\n      <section className=\"section\">\n        <div className=\"title\">\n          <h2>{isLoading ? <Loading /> : title}</h2>\n          {tours.length === 0 && isLoading === false && (\n            <button className=\"btn\" onClick={() => fetchTours()}>\n              Refresh\n            </button>\n          )}\n        </div>\n\n        <Tours tours={tours} removeTour={removeTour} />\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}